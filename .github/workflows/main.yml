# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches: [ main ]

env:
  PYTHON_VERSION: 3.9
  AWS_DEFAULT_REGION: 'eu-central-1'
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #WORKING_DIRECTORY: ./backend

jobs:
# This workflow contains multiple jobs that test backend code, deploys backend and deploys frontend

  # Test Lambda function code
  test-infra:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps: 
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{env.PYTHON_VERSION }}
      - name: install Pip
        run: cd .. && cd /backend/get_function/ && python -m pip install --upgrade pip && pip install -r requirements.txt
      - name: install PyTest
        run: pip install pytest pytest-mock --user
      - name: install boto3
        run: pip install boto3
      - name: Test Lambda function
        run: python -m pytest
    
  deploy-infra:
    # Lambda function tests must complete successfully 
    needs: test-infra
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{env.PYTHON_VERSION }}
          architecture: 'x64'
      - uses: aws-actions/setup-sam@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_DEFAULT_REGION }}
      #- run: sam build
      - run: sam build --use-container
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset

  # Upload frontend files to S3 bucket and invalidate CloudFront
  deploy-site:
    needs: deploy-infra
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v3

    # Obtain AWS Credentials from Secrets
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_DEFAULT_REGION }}

    # Copy contents of main website to  S3 bucket, deleting existing contents first
    - name: Deploy static site to S3 bucket
      run: aws s3 sync ./frontend s3://jacqueskellerman.me/ --delete --exclude ".git*"
  
    # Invalidate CloudFront distribution cache for modified content to reflect
    - name: Invalidate CloudFront cache    
      run: aws cloudfront create-invalidation --distribution-id E198R7UQG19RL5 --paths "/index.html"

# Upload frontend files to S3 bucket for blog
  deploy-blog:
    needs: test-infra
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v3.0.0

    # Obtain AWS Credentials from Secrets
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_DEFAULT_REGION }}

    # Copy contents of blog  website to  S3 bucket, deleting existing contents first
    - name: Deploy blog site to S3 bucket
      run: aws s3 sync ./blog  s3://blog.jacqueskellerman.me/ --delete --exclude ".git*"